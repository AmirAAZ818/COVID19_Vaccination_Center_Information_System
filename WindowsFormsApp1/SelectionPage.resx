<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>